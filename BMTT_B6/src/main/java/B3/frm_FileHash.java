package B3;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author roxph
 */

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.swing.*;
public class frm_FileHash extends javax.swing.JFrame {

    /**
     * Creates new form frm_FileHash
     */
    private File selectedFile;
    public frm_FileHash() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txt_hash = new javax.swing.JTextArea();
        btn_choosefile = new javax.swing.JButton();
        btn_filehash = new javax.swing.JButton();
        btn_savehash = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_hash.setColumns(20);
        txt_hash.setRows(5);
        jScrollPane1.setViewportView(txt_hash);

        btn_choosefile.setText("CHOOSE FILE");
        btn_choosefile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_choosefileActionPerformed(evt);
            }
        });

        btn_filehash.setText("FILE HASH");
        btn_filehash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_filehashActionPerformed(evt);
            }
        });

        btn_savehash.setText("SAVE HASH");
        btn_savehash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_savehashActionPerformed(evt);
            }
        });

        jLabel1.setText("HASH");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_choosefile)
                        .addGap(163, 163, 163)
                        .addComponent(btn_filehash)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_savehash))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_filehash)
                    .addComponent(btn_savehash)
                    .addComponent(btn_choosefile))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_choosefileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_choosefileActionPerformed
        // TODO add your handling code here:
        // Create a file chooser dialog
        JFileChooser fileChooser = new JFileChooser();

        // Show the dialog and wait for user selection
        int result = fileChooser.showOpenDialog(this);

        // If the user selects a file, store it in the selectedFile variable
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
        }
    }//GEN-LAST:event_btn_choosefileActionPerformed

    private void btn_filehashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_filehashActionPerformed
        // TODO add your handling code here:
        // Check if a file has been selected
        if (selectedFile == null) {
            JOptionPane.showMessageDialog(this,
                    "Please choose a file first.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Read the file into a byte array
            byte[] fileBytes = readFile(selectedFile);

            // Calculate the SHA-256 hash of the file
            String hash = calculateHash(fileBytes, "SHA-256");

            // Display the hash in the text field
            txt_hash.setText(hash);
        } catch (IOException | NoSuchAlgorithmException e) {
            // Handle errors during file reading or hash calculation
            JOptionPane.showMessageDialog(this,
                    "Error calculating hash: " + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_filehashActionPerformed

    private void btn_savehashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_savehashActionPerformed
        // TODO add your handling code here:
        // Check if a file has been selected
        if (selectedFile == null) {
            JOptionPane.showMessageDialog(this,
                    "Please choose a file first.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Read the file into a byte array
            byte[] fileBytes = readFile(selectedFile);

            // Calculate the SHA-256 hash of the file
            String hash = calculateHash(fileBytes, "SHA-256");

            // Display the hash in the text field
            txt_hash.setText(hash);
        } catch (IOException | NoSuchAlgorithmException e) {
            // Handle errors during file reading or hash calculation
            JOptionPane.showMessageDialog(this,
                    "Error calculating hash: " + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_savehashActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_FileHash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_FileHash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_FileHash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_FileHash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_FileHash().setVisible(true);
            }
        });
    }
    private byte[] readFile(File file) throws IOException {
        try (FileInputStream fis = new FileInputStream(file)) {
            byte[] buffer = new byte[1024];
            int bytesRead;
            StringBuilder sb = new StringBuilder();
            while ((bytesRead = fis.read(buffer)) != -1) {
                sb.append(new String(buffer, 0, bytesRead));
            }
            return sb.toString().getBytes();
        }
    }

// Method to calculate the hash value
    private String calculateHash(byte[] input, String algorithm)
            throws NoSuchAlgorithmException {
        // Get an instance of the MessageDigest for the specified algorithm
        MessageDigest md = MessageDigest.getInstance(algorithm);

        // Compute the hash of the input byte array
        byte[] hashBytes = md.digest(input);

        // Convert the byte array to a hexadecimal string
        StringBuilder sb = new StringBuilder();
        for (byte b : hashBytes) {
            sb.append(String.format("%02x", b));
        }

        return sb.toString();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_choosefile;
    private javax.swing.JButton btn_filehash;
    private javax.swing.JButton btn_savehash;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txt_hash;
    // End of variables declaration//GEN-END:variables
}
